eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgYnVpbGQ6CiAgICBpbWFnZTogcHl0aG9uOjMuNS4yCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBESkFOR09fU0VUVElOR1NfTU9EVUxFPWluaXRfZGphbmdvLnNldHRpbmdzLmRldgogICAgY29tbWFuZHM6CiAgICAgIC0gcGlwIGluc3RhbGwgdG94CiAgICAgIC0gdG94CgogIGRvY2tlcjoKICAgIGltYWdlOiBwbHVnaW5zL2RvY2tlcgogICAgcmVwbzogcmVnaXN0cnkuZmFwLm5vL2FzcGFyZ2VzZ2FhcmRlbi9hc3Bhcmdlc2dhYXJkZW4KICAgIGluc2VjdXJlOiB0cnVlCiAgICB0YWdzOgogICAgICAgIC0gbGF0ZXN0CiAgICB3aGVuOgogICAgICAgIGJyYW5jaDogbWFzdGVyCgogIHNzaDoKICAgIGltYWdlOiBhcHBsZWJveS9kcm9uZS1zc2gKICAgIGhvc3Q6CiAgICAgLSBwcmltZWFwZS50ZXJyYS5mYXAubm8KICAgIHVzZXI6IHJvb3QKICAgIHBvcnQ6IDIyCiAgICBzY3JpcHQ6CiAgICAgIC0gZG9ja2VyIHB1bGwgcmVnaXN0cnkuZmFwLm5vL2FzcGFyZ2VzZ2FhcmRlbi9hc3Bhcmdlc2dhYXJkZW46bGF0ZXN0CiAgICAgIC0gZG9ja2VyLWNvbXBvc2UgLWYgL3Nydi9kb2NrZXIvYXNwYXJnZXNnYWFyZGVuL2RvY2tlci1jb21wb3NlLnltbCBzdG9wCiAgICAgIC0gZG9ja2VyLWNvbXBvc2UgLWYgL3Nydi9kb2NrZXIvYXNwYXJnZXNnYWFyZGVuL2RvY2tlci1jb21wb3NlLnltbCB1cCAtZAogICAgd2hlbjoKICAgICAgICBzdGF0dXM6IHN1Y2Nlc3MKICAgICAgICBicmFuY2g6IG1hc3RlcgoKICBub3RpZnk6CiAgICBpbWFnZTogZHJpbGxzdGVyL2Ryb25lLWVtYWlsCiAgICBob3N0OiBtYWlsLm50bnUuZmFwLm5vCiAgICBwb3J0OiAyNQogICAgZnJvbTogZHJvbmVAZHJvbmUuZmFwLm5vCiAgICByZWNpcGllbnRzOiBbIGtyYWRhbGJ5QGtyYWRhbGJ5Lm5vIF0KICAgIHdoZW46CiAgICAgIHN0YXR1czogWyBzdWNjZXNzLCBjaGFuZ2VkLCBmYWlsdXJlIF0K.I5lkGz41zBMWLXvd6EF_tIL9GQnxxYiBGj9-fvaHrNg